# CREATING NUMBERS FILE

import random

f = open("numbers.txt","w")
seed(1)

for x in range(15000):

	f.write(str(random()) + ' ' + str(random()) + ' ' + str(random()) + ' ' + str(random()))
	if x != 14999:
		f.write('\n')


#HADOOP STREAMING

MAPPER

#!/usr/bin/python
import sys

f = open("centers.txt","r")
centers = []
for line in f.readlines():
	line = line.strip()
	centers.append(line)
	
for line in sys.stdin:
	split = line.strip().split(' ')
	split = map(float,split)
	
	Distances = []
	 for i in range(5):
                d = sqrt(((split[0] - float(centers[i].split(' ')[0]))**2) +
                ((split[1] - float(centers[i].split(' ')[1]))**2) + ((split[2] -
                float(centers[i].split(' ')[2]))**2) + ((split[3] -
                float(centers[i].split(' ')[3]))**2))
                Distances.append(d)

        max_distance = max(Distances)
        max_index = Distances.index(max_distance)

	print ' '.join([str(max_index)] + map(str,split)) 


REDUCER

#!/usr/bin/python
import sys

currentKey = None
centroid = []
f = open("centers.txt","w")

for line in sys.stdin:
	split = line.strip().split(' ')
	key = split[0]

	if currentKey == key:   #same key
		centroid[0] = centroid[0] + split[1]
		centroid[1] = centroid[1] + split[2]
		centroid[2] = centroid[2] + split[3]
		centroid[3] = centroid[3] + split[4]
		count = count + 1
	else:
		if currentKey:
			new_center = [x / count for x in centroid]
			output = ' '.join(new_center)
			f.write(output + '\n')
			print output
		currentKey = key
		count = 1
		centroid = [0,0,0,0]
		centroid[0] = centroid[0] + split[1]
		centroid[1] = centroid[1] + split[2]
		centroid[2] = centroid[2] + split[3]
		centroid[3] = centroid[3] + split[4]

new_center = [x / count for x in centroid]
output = ' '.join(new_center)
f.write(output)
print output